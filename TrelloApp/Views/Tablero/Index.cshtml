@using TrelloApp.Resources
@model IEnumerable<Estado>
@{
    var json = ViewBag.Estados;
}
    @section Estilos{
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <style type="text/css">
        textarea {
            width: 100%;
            height: 100%;
            resize: vertical; /* Permite redimensionar solo verticalmente */
        }
        .card-body{
            max-height:1000px;
        }
    </style>
    }
    @if (TempData["messageInsert"] != null)
    {
        <div id="messageContainerI" data-message="@TempData["messageInsert"]"></div>
    }
    @if (TempData["messageDelete"] != null)
    {
        <div id="messageContainerD" data-message="@TempData["messageDelete"]"></div>
    }
    @if (TempData["messageUpdate"] != null)
    {
        <div id="messageContainerU" data-message="@TempData["messageUpdate"]"></div>
    }
    @if (TempData["messageInsertEstado"] != null)
        {
           <div id="messageContainerIE" data-message="@TempData["messageInsertEstado"]"></div>
        }
    
   <div class="card">
    <nav class="nav wrapper deep-purple accent-2">
        <ul id="nav-mobile" class="left hide-on-med-and-down">
            <li><a id="btnMUpdateStatus">Update Status</a></li>
            <li><a id="btnMAddStatus">Add Status</a></li>
            <li><a id="btnMUpdateCardStatus">Update Card Status</a></li>
            <li><a onclick="Updatestatustarjeta();">Save Changes</a></li>
        </ul>
    </nav>
        <div class="card-body">
            <div class="d-flex flex-row gap-2 contenedor-cards justify-content-center">
            @foreach (var estado in Model)
            {
                <div class="card text-center" style="width: 30vw;" id="contenedor_@estado.Id">
                    <div class="card-header deep-purple accent-2">
                        <h6 class="card-title text-uppercase text-white" style="font-weight:bold;"><b>@estado.Name</b><a asp-controller="Tablero" asp-action="DeleteEstado" asp-route-id="@estado.Id"><i class="material-icons right" id="btnDeleteStatus">close</i></a></h6>
                    </div>
                    <div class="card-body">
                        @await Component.InvokeAsync("TarjetaCard", estado.Id)
                    </div>
                    <div class="card-footer deep-purple accent-2 text-lg-start">
                        <button id="addCardButton_@estado.Id" class="btn btn-secondary purple darken-4 addCardButton" style="text-decoration: none; color:white;" onclick="ToggleMod(@estado.Id)"><i class="fa-solid fa-plus"></i> Add a card</button>
                    </div>
                    <div id="NewCard_@estado.Id" style="display: none;">
                        <div class="card" id="cardN" style="height: 100%;">
                            <div class="card-body">
                                <form method="post" asp-action="CreateNewCard" asp-controller="Tablero">
                                    <div class="text-lg-start pb-1">
                                        <input hidden name="estado" value="@estado.Id" />
                                        <div class="input-field">
                                            <i class="material-icons prefix">title</i>
                                            <input type="text" name="title" class="input_text" data-length="40" required />
                                            <label for="icon_prefix">Title</label>
                                        </div>
                                        <div class="input-field">
                                            <i class="material-icons prefix">mode_edit</i>
                                            <textarea class="materialize-textarea textarea2" name="description" data-length="120" required></textarea>
                                            <label for="icon_prefix2">Description</label>
                                        </div>
                                    </div>
                                    <div class="pt-2 text-md-start d-flex gap-5">
                                        <div class="w-75">
                                            <button type="submit" class="btn btn-success blue darken-1 ">Add Card</button>
                                            <a class="text-black px-3" onclick="HideMod(@estado.Id)" style="cursor: pointer;"><i class="fa-solid fa-xmark fa-2xl"></i></a>
                                        </div>
                                        <div class="w-25">
                                            <a class="text-black px-5"><i class="fa-solid fa-ellipsis fa-2xl"></i></a>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>

    <div class="modal h-auto" id="mAddStatus"  style="border-radius: 0.5rem; width: 30%;">
        <div class="modal-content h-100">
            <h1 class="fs-4 text-uppercase"><b>Create New Status</b><span class="modal-close"><i class="material-icons right">close</i></span></h1>
            <form asp-action="AddEstado" asp-controller="Tablero" method="post">
                <div class="input-field pt-2" id="dName">
                    <input id="txtName" type="text" name="Name" class="input-text" data-length="40" required />
                    <label for="txtName">Name</label>
                </div>  
                <div class="form-group text-lg-end mt-2">
                    <button type="button" class="btn btn-secondary blue-grey lighten-2 modal-close" >Cancelar</button>
                    <button type="submit" class="btn blue darken-1 my-2 btn-primary">Crear Estado</button>
                </div>
            </form>
        </div>
    </div>
    <div class="modal h-auto" id="mUpdateStatus" style="border-radius: 0.5rem; width: 30%;">
        <div class="modal-content">
            <h1 class="fs-4 text-uppercase"><b>Update Status</b><span class="modal-close"><i class="material-icons right">close</i></span></h1>
            <form asp-action="UpdateEstado" asp-controller="Tablero" method="post">
                <select asp-items=ViewBag.ListaEstados id="cboestados"></select>
                <input type="hidden" id="selectedValue" name="estadoId" />
                <div class="input-field pt-2" id="dName">
                    <input id="txtName" type="text" name="Name" required />
                    <label for="txtName">Name</label>
                </div>
                <div class="form-group text-lg-end mt-5">
                    <button type="button" class="btn btn-secondary blue-grey lighten-2 modal-close">Cancel</button>
                    <button type="submit" class="btn blue darken-1 my-2 btn-primary">Update Status</button>
                </div>
            </form>
        </div>
    </div>
    <div class="modal h-auto" id="mUpdateCardStatus" style="border-radius: 0.5rem; width: 30%;">
        <div class="modal-content">
                <h1 class="fs-4 text-uppercase"><b>Update Status Card</b><span class="modal-close"><i class="material-icons right">close</i></span></h1>
                <form>
                    <div class="input-field">
                        <select asp-items=ViewBag.ListaEstados id="cboestadoFirst"></select>
                        <label>Status Initial</label>
                    </div>
                    <div class="input-field">
                        <select multiple id="cbocard">
                            <option value="" disabled selected>Choose your option</option>
                        </select>
                        <label>Cards Availables</label>
                    </div>
                    <div class="input-field">
                        <select asp-items=ViewBag.ListaEstados id="cboestadoEnd"></select>
                        <label>Status End</label>
                    </div>
                    <input type="hidden" id="cardValue"  name="cardName"/>
                    <input type="hidden" id="estadoFirstValue"  name="estadoFirstId"/>
                    <input type="hidden" id="estadoEndValue" name="estadoEndId" />
                    <div class="form-group text-lg-end mt-5">
                        <button type="button" class="btn btn-secondary blue-grey lighten-2 modal-close">Cancel</button>
                        <button type="button" class="btn btn-primary blue darken-1 my-2" onclick="UpdateEstadoTarjeta();">Set Status</button>
                    </div>
                </form>
            </div>
    </div>

@section Scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
    
    <script type="text/javascript">
        const tableroLink = document.querySelector('a[href="/Tablero/Index"]');
        tableroLink.addEventListener('click', (event) => {
            event.preventDefault(); // Evita el comportamiento por defecto del enlace
            window.location.reload();
        });

        $("#btnMAddStatus").click(function () {
            $('#mAddStatus').toggle();
        });
        $(".modal-close").click(function () {
            $("#mAddStatus").hide();
        });
        $("#btnMUpdateStatus").click(function () {
            $('#mUpdateStatus').toggle();
        });
        $(".modal-close").click(function () {
            $("#mUpdateStatus").hide();
        });
        $("#btnMUpdateCardStatus").click(function () {
            $('#mUpdateCardStatus').toggle();
        });
        $(".modal-close").click(function () {
            $("#mUpdateCardStatus").hide();
        });

        const messageContainerI = document.getElementById('messageContainerI');
        const messageContainerD = document.getElementById('messageContainerD');
        const messageContainerU = document.getElementById('messageContainerU');
        const messageContainerIE = document.getElementById('messageContainerIE');
        if (messageContainerI) {
            const messageI = messageContainerI.dataset.message;
            if (messageI) {
                toastr.success(messageI, "Admin Side", {timeOut: 1000});
            }
        } else {
            console.error("Element with ID 'messageContainer' not found.");
        }
        if (messageContainerD) {
            const messageD = messageContainerD.dataset.message;
            if (messageD) {
                toastr.error(messageD);
            }
        } else {
            console.error("Element with ID 'messageContainer' not found.");
        }
        if (messageContainerU) {
            const messageU = messageContainerU.dataset.message;
            if (messageU) {
                toastr.info(messageU);
            }
        } else {
            console.error("Element with ID 'messageContainer' not found.");
        }
        if (messageContainerIE) {
            const messageIE = messageContainerIE.dataset.message;
            if (messageIE) {
                toastr.success(messageIE);
            }
        } else {
            console.error("Element with ID 'messageContainer' not found.");
        }


        $("#cboestados").change(function () {
            $("#selectedValue").val($(this).val());
        });
        if ($("#cboestados").val() != undefined) {
            $('#selectedValue').val($("#cboestados").val());
        }

        $("#cboestadoFirst").change(function () {
            $("#estadoFirstValue").val($(this).val());
        });
        if ($("#cboestadoFirst").val() != undefined) {
            $('#estadoFirstValue').val($("#cboestadoFirst").val());
        }

        $("#cboestadoEnd").change(function () {
            $("#estadoEndValue").val($(this).val());
        });
        if ($("#cboestadoEnd").val() != undefined) {
            $('#estadoEndValue').val($("#cboestadoEnd").val());
        }

        $("#cbocard").change(function () {
            $("#cardValue").val($(this).val());
        });
        if ($("#cbocardValue").val() != undefined) {
            $('#cardValue').val($("#cbocardValue").val());
        }


        function UpdateEstadoTarjeta(){
            var cardId = $("#cbocard").val();
            var estadoFirstId = $("#cboestadoFirst").val();
            var estadoEndId = $("#cboestadoEnd").val();
            $.ajax({
                url: "@Url.Action("UpdateStatusCard", "Tablero")",
                type: "GET",
                dataType: "json",
                data: {
                    cardId: cardId,
                    estadoFirstId: estadoFirstId,
                    estadoEndId: estadoEndId
                },
                success: function (response) {
                    console.log(response);
                    if (response.results == "Success") {
                        window.location.reload();
                    } else {
                        toastr.error("Error al cambiar el Estado!");
                    }
                }
            });
        }

        function GenerateSortablesForEstados() {
            var estadosJson = @Html.Raw(ViewBag.EstadosJson);
            var len = estadosJson.Value.data.length;
            var data = estadosJson.Value.data
            for (var i = 0; i < len; i++) {
                var id = "card_" + data[i].Id;
                new Sortable(document.getElementById(id), {
                    group: "shared",
                    animation: 150,
                    onAdd: (evt) => {
                        evt.newIndex = evt.length - 1;
                    },
                    ghostClass: 'blue-background-class',
                    
                });
            }
        }

        $("#cboestadoFirst").change(function () {
            var estadoId = $(this).val();
            $.ajax({
                url: "@Url.Action("GetTarjetasByComboEstados", "Tablero")",
                type: "GET",
                dataType: "json",
                data: {
                    estadoId: estadoId
                },
                success: function(response){
                    console.log(response);
                    var cbocards = $("#cbocard"); // Reemplaza con el ID de tu select
                    cbocards.empty(); // Limpia las opciones existentes
                    var optionTemplate = '<option value="{id}">{title}</option>';

                    $.each(response.data, function (index, item) {
                        var optionHtml = optionTemplate
                            .replace('{id}', item.id)
                            .replace('{title}', item.title);
                        cbocards.append(optionHtml);
                    });
                    $('#cbocard').formSelect();
                }
            });
        });

        function ToggleMod(estadoid){
            const expandButton = document.getElementById(`addCardButton_${estadoid}`);
            const cardContent = document.getElementById(`NewCard_${estadoid}`);
            var textAreas = document.querySelectorAll('.form-group .form-control');

            $(`#NewCard_${estadoid}`).toggle();
            textAreas.forEach(textArea => {
                textArea.style.display = 'none';
            });
            if ($(`#NewCard_${estadoid}`).is(':visible')) {
                $(".card-body").css("overflow", "");
                textAreas.forEach(textArea => {
                    textArea.style.display = 'none';
                });
                // $(".card-body").css("overflow", "");
            } else {
                // textAreas.forEach(textArea => {
                //     textArea.style.display = 'block';
                // });
                // $(".card-body").css("overflow", "auto");
                location.reload();
            }
            

            // cardContent.scrollIntoView({ behavior: 'smooth' });
        }
        function HideMod(estadoid) {
            $(`#NewCard_${estadoid}`).hide();
            location.reload();
        }
        function ocultarFooter() {
            document.querySelector('footer').style.display = 'none';
        }
        // function GetId(id){
        //     $(document).ready(function () {
        //         $(`#addCardButton_${id}`).click(function () {
        //             $(`#${id}`).toggle();
        //         });
        //     });
        // }
        function recalculateCardHeights() {
            $('.card').each(function () {
                var card = $(this);
                // Calculate heights considering displayed content
                var cardHeaderHeight = card.find('.card-header').outerHeight(true);
                var cardBodyHeight = card.find('.card-body').outerHeight(true); // Include textarea height
                var cardFooterHeight = card.find('.card-footer').outerHeight(true);

                // Calculate total height
                var totalHeight = cardHeaderHeight + cardBodyHeight + cardFooterHeight;

                // Set the new height (optimized for performance)
                card.css('height', totalHeight);
            });
        }
        // function checkShowElements() {
        //     const showElements = document.querySelectorAll('[id^="show_"]');

        //     showElements.forEach((element) => {
        //         if (element.style.display !== 'none') {
        //             location.reload();
        //         }
        //     });
        // }
       

        $(document).ready(function () {
            $('input.input_text, textarea.textarea2').characterCounter();
            $('select').formSelect();
            $('.modal').modal();

            Updatestatustarjeta();
            GenerateSortablesForEstados();
            // ocultarFooter();
            $('html, body').animate({ scrollTop: 0 }, 'fast');
            if ($("#cboestadoFirst").prop("selectedIndex") == 0){
                var estadoFirstId = $("#cboestadoFirst").val();
                $.ajax({
                    url: "@Url.Action("GetTarjetasByComboEstados", "Tablero")",
                    type: "GET",
                    dataType: "json",
                    data: {
                        estadoId: estadoFirstId
                    },
                    success: function (response) {
                        var cbocards = $("#cbocard"); // Reemplaza con el ID de tu select
                        cbocards.empty(); // Limpia las opciones existentes

                        var optionTemplate = '<option value="{id}">{title}</option>';

                        $.each(response.data, function (index, item) {
                            var optionHtml = optionTemplate
                                .replace('{id}', item.id)
                                .replace('{title}', item.title);
                            cbocards.append(optionHtml);
                        });
                        $("#cbocard").formSelect();
                    }
                });
            }

            // recalculateCardHeights();
            // Delegación de eventos al elemento body
            // $('body').on('click', '.addCardButton', function () {
            //     const id = $(this).attr('id').replace('addCardButton_', '');
            //     $(`#NewCard_${id}`).toggle();
            // });
            //Mensajes
            var mensaje = $('#txtMessage');
            if (mensaje.text().trim() !== '') {
                mensaje.show();
                setTimeout(function () {
                    mensaje.hide();
                }, 2000);
            }
        });

        $('body').on('click', '.showDescription', function () {
            const id = $(this).attr('id').replace('info_', '');
            const element = $(`#show_${id}`);
            var cardsPrincipal = document.querySelectorAll(".card.text-center");
            let cardsContainer = document.querySelector(".contenedor-cards");

            element.data('hidden', !element.data('hidden'));
            element.toggle();
            // $(".card-body").css("overflow", "auto");
            // cardsPrincipal.forEach((card) => {
            //     if (element.is(':visible')) {
            //         card.style.height = parseInt(card.style.height, 10) + 30 + 'px';
            //         // $(".card-body").css("overflow", "");
            //     } else {
            //         card.style.height = parseInt(card.style.height, 10) - 30 + 'px';
            //     }
            // });
        });
        const ListInicial = (function () {
            var estadosJson = @Html.Raw(ViewBag.EstadosJson);
            var len = estadosJson.Value.data.length;
            var data = estadosJson.Value.data
            const ListaForms = [];
            for (var i = 0; i < len; i++) {
                var txtContenedor = "contenedor_" + data[i].Id;
                var txtCard = "#card_" + data[i].Id;
                const divCardEstado = document.getElementById(txtContenedor);
                const divCardsTarjeta = divCardEstado.querySelector(txtCard);
                const formsTarjeta = divCardsTarjeta.querySelectorAll("form");
                ListaForms.push(formsTarjeta);
            }
            return ListaForms;
        })();
        function Updatestatustarjeta(){
            var estadosJson = @Html.Raw(ViewBag.EstadosJson);
            var len = estadosJson.Value.data.length;
            var data = estadosJson.Value.data
            const ListaForms = [];
            for (var i = 0; i < len; i++) {
                var txtContenedor = "contenedor_" + data[i].Id;
                var txtCard = "#card_" + data[i].Id;
                const divCardEstado = document.getElementById(txtContenedor);
                const divCardsTarjeta = divCardEstado.querySelector(txtCard);
                const formsTarjeta = divCardsTarjeta.querySelectorAll("form");
                ListaForms.push(formsTarjeta);
            }
            for (var i = 0; i < ListaForms.length; i++) {
                if (ListaForms[i].length !== ListInicial[i].length){
                    for (var j = 0; j < ListaForms[i].length; j++){
                        var elementoListInicial = ListInicial[i][j];
                        if (elementoListInicial == undefined){
                            var parentListaInicial = null;
                        }else{
                            var parentListaInicial = elementoListInicial.parentNode.parentNode.parentNode.getAttribute("id");
                        }
                        var elementoListaForms = ListaForms[i][j];
                        var parentListaForms = elementoListaForms.parentNode.parentNode.parentNode.getAttribute("id");
                        if (ListaForms[i][j] !== ListInicial[i][j] && parentListaInicial !== parentListaForms) {
                            var elementoListaForms = ListaForms[i][j];
                            var parentListaForms = elementoListaForms.parentNode.parentNode.parentNode.getAttribute("id").split("_");
                            var idparent = parentListaForms[parentListaForms.length - 1];
                            var id = elementoListaForms.getAttribute("id").split("_");
                            var idNumero = id[id.length - 1];
                            $.ajax({
                                url: "@Url.Action("UpdateStatusCard", "Tablero")",
                                type: "GET",
                                dataType: "json",
                                data: {
                                    cardId: idNumero,
                                    estadoEndId: idparent
                                },
                                success: function (response) {
                                    console.log(response);
                                    if (response.results == "Success") {
                                        window.location.reload();
                                    } else {
                                        toastr.error("Coloque la tarjeta al final de la lista..", "Error al cambiar el Estado!");
                                        // window.location.reload();
                                    }
                                }
                            });
                        }
                    }
                    
                }
                // for (var j = 0; j < ListInicial.length; j++) {
                //     if (ListaForms[i] !== ListInicial[j]) {
                //         return console.log(ListaForms[i]);
                //     }
                // }
            }
        }

    </script>
}
